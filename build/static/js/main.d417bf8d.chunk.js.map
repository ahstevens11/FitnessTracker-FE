{"version":3,"sources":["auth/index.js","api/index.js","components/routines/MakeRoutine.js","components/Login.js","components/Register.js","components/routines/MyRoutines.js","components/routines/Routines.js","components/Activities.js","components/Home.js","App.js","index.js"],"names":["getToken","JSON","parse","localStorage","getItem","token","baseURL","fetchUserData","a","fetch","headers","Authorization","response","json","data","console","error","fetchUserRoutines","username","createRoutines","routine","method","body","stringify","fetchAllRoutines","fetchAllActivites","applyActivityToRoutine","routineId","activityIdV","countV","durationV","activityId","count","duration","updateRoutineApi","name","goal","payload","newName","prompt","newGoal","alert","updateActivitiesApi","id","newCount","newDuration","deleteActivityApi","deleteRoutineApi","createActivity","activity","MakeRoutine","setDisplayMessage","setIsShown","loggedIn","useState","newRoutine","setNewRoutine","finished","setFinished","useEffect","to","className","onSubmit","event","preventDefault","target","value","isPublic","type","placeholder","Login","props","user","setUser","setAuthorized","setCurrentUser","setLoggedIn","password","then","result","message","setItem","storeToken","catch","required","onChange","e","helperSubmit","Register","MyRoutines","currentUser","activities","userRoutines","setUserRoutines","setActivityId","durationCount","setDurationCount","setRoutineId","hack","setHack","handleSubmit","handleSubmitUpdateRoutine","handleSubmitDeleteRoutine","handleSubmitDeleteActivity","handleSubmitUpdateActivities","getUserRoutines","routines","align","map","index","onClick","description","routineActivityId","min","Routines","grabbedRoutines","setGrabbedRoutines","getAllRoutines","creatorName","activity1","Activities","setActivities","newActivity","setNewActivity","Home","App","authorized","grabbedActivities","removeItem","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d417bf8d.chunk.js","sourcesContent":["export const storeToken = (token) => {\n    localStorage.setItem('token', JSON.stringify(token))\n}\n\nexport const getToken = () => {\n    return JSON.parse(localStorage.getItem('token'))\n}\n\nexport const clearToken = () => {\n    localStorage.removeItem('token')\n}","import { getToken } from \"../auth\";\nconst token = getToken();\n\nconst baseURL = \"https://fitnesstrac-kr.herokuapp.com/api/\";\n\nexport const fetchUserData = async () => {\n  try {\n    const response = await fetch(`${baseURL}users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchUserRoutines = async (username) => {\n  try {\n    const response = await fetch(`${baseURL}users/${username}/routines`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const createRoutines = async (routine) => {\n  try {\n    const response = await fetch(`${baseURL}routines`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(routine),\n    });\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchAllRoutines = async () => {\n  try {\n    const response = await fetch(`${baseURL}routines`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchAllActivites = async () => {\n  try {\n    const response = await fetch(`${baseURL}activities`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const applyActivityToRoutine = async (\n  routineId,\n  activityIdV,\n  countV,\n  durationV\n) => {\n  try {\n    const response = await fetch(`${baseURL}routines/${routineId}/activities`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        activityId: activityIdV,\n        count: countV,\n        duration: durationV,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const updateRoutineApi = async (name, goal, routineId) => {\n  let payload = {};\n  let newName = prompt(\"What would you like to change the name to?\", name);\n  let newGoal = prompt(\"What would you like to change the goal to?\", goal);\n  if (newName) {\n    payload.name = newName;\n  }\n\n  if (newGoal) {\n    payload.goal = newGoal;\n  }\n\n\n  try {\n    const response = await fetch(`${baseURL}routines/${routineId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(payload),\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error);\n  }\n};\n\nexport const updateActivitiesApi = async (id, count, duration) => {\n  let payload = {};\n  let newCount = prompt(\"What would you like to change the count?\", count);\n  let newDuration = prompt(\n    \"What would you like to change the duration?\",\n    duration\n  );\n\n  payload = { count: newCount, duration: newDuration };\n\n  try {\n    const response = await fetch(`${baseURL}/routine_activities/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(payload),\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error);\n  }\n};\n\nexport const deleteActivityApi = async (id) => {\n\n  try {\n    const response = await fetch(`${baseURL}/routine_activities/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error);\n  }\n};\n\nexport const deleteRoutineApi = async (id) => {\n\n  try {\n    const response = await fetch(`${baseURL}/routines/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error);\n  }\n};\n\nexport const createActivity = async (activity) => {\n    try {\n        const response = await fetch(`${baseURL}activities`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify(activity) \n            \n        });\n        const data = await response.json();\n\n        return data\n\n    } catch (error) {\n        console.error(error);\n    }     \n}\n\nexport const fetchRoutinesByActivity = async (activityId) => {\n    \n    try {\n        const response = await fetch(`${baseURL}activities/${activityId}/routines`, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n        const data = await response.json();\n\n        return data\n\n    } catch (error) {\n        console.error(error);\n    }    \n}","import { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport {createRoutines} from '../../api'\n\nconst MakeRoutine = ({ setDisplayMessage, setIsShown, loggedIn }) => {\n const [newRoutine, setNewRoutine] = useState();\n    const [finished, setFinished] = useState(false);\n    \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const [name, goal] = event.target;\n        \n        if(name.value && goal.value){\n           const newRoutine = {               \n                   name: name.value,\n                   goal: goal.value,\n                   isPublic: true             \n           } \n           setNewRoutine(newRoutine)\n        }else{\n            alert(\"Make sure all fields are filled in\")\n        } \n    }\n    \n    useEffect(async () => {\n        if(newRoutine) {\n            try{\n                const response = await createRoutines(newRoutine);\n                setFinished(true)\n    \n            }catch (error) {\n                console.error(error)\n            }finally {<Redirect to = \"/\"/>}\n        }\n        }, [newRoutine]) \n\n    \n     if(finished){\n        return <Redirect to = \"/myRoutines\"/>\n\n    }else{ \n        return ( <div className=\"makeRoutine\">\n                \n        <h2>Create A Routine</h2>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label>Name</label>\n                <input type='text' placeholder='Name' />\n            </div>\n            <div>\n                <label>Goal</label>\n                <input type='text' placeholder='Goal' />\n            </div>\n            <button className = \"submitButton\" type='submit'>Submit</button>\n            </form>\n            </div>\n        )\n    }\n}\n\nexport default MakeRoutine","import React, { useState } from \"react\";\nimport { storeToken } from \"../auth\";\nimport {Redirect} from \"react-router-dom\"\n\nconst Login = (props) => {\n  const [user, setUser] = useState(\"\");\n  const { setAuthorized, setCurrentUser, loggedIn, setLoggedIn } = props;\n\n  function helperSubmit(e) {\n    setUser({ ...user, password: e.target.value });\n    setCurrentUser(user.username);\n  }\n\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(\n      \"https://fitnesstrac-kr.herokuapp.com/api/users/login\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username: user.username, password: user.password }),\n      }\n    )\n      .then((response) => response.json())\n      .then((result) => {\n\n        if (result.message === \"you're logged in!\") {\n          alert(result.message);\n          setAuthorized(result.token)\n          setLoggedIn(result.token)\n          storeToken(result.token);\n        } else {\n          alert(result.message);\n          \n        }\n      })\n      .catch(console.error);\n  };\n  if (loggedIn) {\n    return <Redirect to=\"/\" />\n  }else{\n    return (\n      <form onSubmit={handleSubmit}>\n        <h1> Login:</h1>\n        <label>Username:</label>\n        <input\n          name=\"Username\"\n          required\n          onChange={(e) => setUser({ ...user, username: e.target.value })}\n        />\n        <label>Password:</label>\n        <input type=\"password\" required onChange={(e) => helperSubmit(e)} />\n        <button type=\"submit\">submit</button>\n      </form>\n    );\n  }\n};\n\nexport default Login;","import React, { useState } from \"react\";\nimport {Redirect} from \"react-router-dom\"\n\nconst Register = (props) => {\n    const [user, setUser] = useState(\"\")\n    const { setAuthorized, loggedIn, setLoggedIn } = props;\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        fetch(\n            \"http://fitnesstrac-kr.herokuapp.com/api/users/register\",\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({username:user.username, password:user.password}),\n            }\n        )\n        .then((response) => response.json())\n        .then((result) => {\n            if (result.message === \"you're signed up!\") {\n                alert(\"You Are Registered\")\n                setAuthorized(result.token)\n                setLoggedIn(result.token)\n            } else {\n                alert(result.message)\n            }\n        })\n        .catch(console.error)\n    }\n    if (loggedIn) {\n        return <Redirect to=\"/\" />\n      }else{\n        return (\n          <form onSubmit={handleSubmit}>\n            <h1> Registration:</h1>\n            <label>Username:</label>\n            <input\n              name=\"Username\"\n              required\n              onChange={(e) => setUser({ ...user, username: e.target.value })}\n            />\n            <label>Password:</label>\n            <input\n              type=\"password\"\n              required\n              onChange={(e) => setUser({ ...user, password: e.target.value })}\n            />\n            <button type=\"submit\">submit</button>\n          </form>\n        );\n      }    \n}\n\nexport default Register","import { Redirect, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {\n  fetchUserRoutines,\n  applyActivityToRoutine,\n  updateRoutineApi,\n  deleteActivityApi,\n  updateActivitiesApi,\n  deleteRoutineApi,\n} from \"../../api\";\n\nconst MyRoutines = ({ loggedIn, currentUser, activities }) => {\n  const [userRoutines, setUserRoutines] = useState();\n  const [activityId, setActivityId] = useState();\n  const [durationCount, setDurationCount] = useState();\n  const [routineId, setRoutineId] = useState();\n  const [hack, setHack] = useState(1);\n\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const { duration, count } = durationCount;\n\n    try {\n      const response = await applyActivityToRoutine(\n        routineId,\n        activityId,\n        count,\n        duration\n      );\n\n      if (!response.id) {\n        return alert(\"Something went wrong\");\n      }\n      setRoutineId(null);\n      setDurationCount(null);\n      setActivityId(null);\n      setHack(hack + 1);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSubmitUpdateRoutine = async (name, goal, id) => {\n    \n\n    try {\n      const routines = await updateRoutineApi(name, goal, id); //<--change to currentUser\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSubmitDeleteRoutine= async (id) => {\n    try {\n      const routines = await deleteRoutineApi(id); //<--change to currentUser\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSubmitDeleteActivity = async (id) => {\n    try {\n      const activity = await deleteActivityApi(id); //<--change to currentUser\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSubmitUpdateActivities = async (routineId, count, duration) => {\n    try {\n      const routines = await updateActivitiesApi(routineId, count, duration); //<--change to currentUser\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getUserRoutines = async () => {\n    if (!currentUser || !activities) {\n      return;\n    }\n    try {\n      const routines = await fetchUserRoutines(currentUser); \n      setUserRoutines(routines);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(getUserRoutines, [currentUser, activities, hack]);\n\n  if (!loggedIn) {\n    return <Redirect to=\"/\" />;\n  } else {\n    return (\n      <div>\n        <h1 align=\"center\">Welcome {currentUser}</h1>\n\n        <Link className=\"MakeRoutineLink\" to=\"/createRoutine\">\n          Create a Routine\n        </Link>\n        {userRoutines ? (\n          userRoutines?.map((routine, index) => {\n            return (\n              <div key={index}>\n                \n                  <h2>{routine.name}\n                  </h2>\n                  <h3>{routine.goal}</h3>\n                    \n                 \n\n                  <button\n                          type=\"button\"\n                          onClick={() =>\n                            handleSubmitUpdateRoutine(routine.name, routine.goal, routine.id)\n                          }\n                        >\n                          Update Routine Name or Goal\n                        </button>\n                  <button\n                          type=\"button\"\n                          onClick={() =>\n                            handleSubmitDeleteRoutine(routine.id)\n                          }\n                        >\n                          Delete\n                        </button>\n                  \n                \n\n                {routine.activities[0] ? (\n                  routine.activities.map((activity, index) => {\n                    return (\n                      <ul key={index}>\n                        <li>Activity: {activity.name}</li>\n                        <li>Description: {activity.description}</li>\n                        <li>Duration:{activity.duration}</li>\n                        <li>Count:{activity.count} </li>\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            handleSubmitUpdateActivities(\n                              activity.routineActivityId,\n                              activity.duration,\n                              activity.count\n                            )\n                          }\n                        >\n                          Update\n                        </button>\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            handleSubmitDeleteActivity(activity.routineActivityId)\n                          }\n                        >\n                          Delete\n                        </button>\n                      </ul>\n                    );\n                  })\n                ) : (\n                  <b>No activities have been added to this routine</b>\n                )}\n\n                <form onSubmit={handleSubmit}>\n                  <label>Add Activity to this Routine</label>\n                  <select \n                    name=\"Activities\"\n                    id=\"select-activity\"\n                    value={activityId}\n                    onChange={(event) => {\n                      setRoutineId(routine.id);\n                      setActivityId(event.target.value);\n                      return;\n                    }}\n                  >\n                    <option value=\"null\">Select an activity to add</option>\n                    {activities.map((activity, index) => {\n                      return (\n                        <option key={index} value={activity.id}>\n                          {activity.name}\n                        </option>\n                      );\n                    })}\n                  </select>\n                  <div>\n                    <label>Count</label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      placeholder=\"Count\"\n                      onChange={(e) =>\n                        setDurationCount({\n                          ...durationCount,\n                          count: e.target.value,\n                        })\n                      }\n                    />\n                  </div>\n                  <div>\n                    <label>Duration</label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      placeholder=\"Duration\"\n                      onChange={(e) =>\n                        setDurationCount({\n                          ...durationCount,\n                          duration: e.target.value,\n                        })\n                      }\n                    />\n                  </div>\n                  <button className=\"submitButton\" type=\"submit\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            );\n          })\n        ) : (\n          <h2>You don't have any routines, click \"Create a Routine\" to make one!</h2>\n        )}\n      </div>\n    );\n  }\n};\n\nexport default MyRoutines;","import {fetchAllRoutines} from \"../../api\"\nimport {useState, useEffect} from 'react'\n\n\nconst Routines = () =>{\n    const [grabbedRoutines, setGrabbedRoutines] = useState()\n    \n    const getAllRoutines = async () => {\n        try{\n            const routines = await fetchAllRoutines(); \n            setGrabbedRoutines(routines)\n        }catch (error) {console.error(error)\n        }\n    }\n\n    useEffect( getAllRoutines, []);\n    return(\n        <div>\n        <h1 align=\"center\">Welcome to Routines</h1>\n        <div className =\"results\">\n         {grabbedRoutines?.map((routine, index) => { \n            return (\n               <div className = \"listing\" key={index}>\n                    <h2 align=\"center\">Routine: {routine.name} ||  Created by: {routine.creatorName}</h2>\n                    <hr></hr>\n                    <h4>Goal: {routine.goal}</h4>\n                    \n                    {routine.activities[0] ?\n                        routine.activities.map((activity1, index) => {\n                            return(\n                                <h6 key={index}><ul >\n                                    <li>Activity: {activity1.name}</li>\n                                    <li>Description: {activity1.description}</li>\n                                    <li>Duration: {activity1.duration}</li>\n                                    <li>Count: {activity1.count}</li>\n                                </ul></h6>) \n                        \n                        }) \n                        :<b>No activities have been added to this routine</b>}                  \n               </div> \n            )        \n        })}\n        </div>\n        </div>\n   )\n}   \n\nexport default Routines","  \nimport {useState} from 'react'\nimport {createActivity, fetchAllActivites} from '../api'\n\nconst Activities = ({activities, loggedIn, setActivities}) =>{\n    const[newActivity, setNewActivity, ] = useState()\n    const handleSubmit = async (event) =>{\n        try{\n            event.preventDefault()\n            const response = await createActivity(newActivity) \n\n            if(response.id){\n            alert(\"success creating activity\")\n                setActivities(await fetchAllActivites())\n            }else{\n                return alert(response.message)\n            }\n            }catch(error){\n                console.error(error)\n            }\n    }\n\n    return ( <div>\n        {loggedIn ? \n    <form onSubmit={handleSubmit}>\n    <h2> Create An Activity</h2>\n    <label>Activity Name:</label>\n    <input\n      name=\"Name\"\n      required\n      onChange={(e) => setNewActivity({ ...newActivity, name: e.target.value })}\n    />\n    <label>Description:</label>\n    <input\n      type=\"Description\"\n      required\n      onChange={(e) => setNewActivity({ ...newActivity, description: e.target.value })}\n    />\n    <button type=\"submit\">submit</button>\n  </form> : null }\n    \n       \n            <h1>Activities</h1>\n        {activities?.map((activity, index) => {\n       return (\n       <div key={index}>\n        \n        <h2>Activity : {activity.name}</h2>\n        <h3>Description :</h3> <p>{activity.description}</p>  \n       </div>)\n    })}\n    </div>\n    )\n    \n} \n\nexport default Activities","const Home = () => {\n    return(\n        <div>\n            <h1 align=\"center\">Welcome to Fitness Tracker</h1>\n            <h2 align=\"center\">Lets Get Fit!</h2>\n        </div>\n    )\n}\n\nexport default Home","import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Link, Switch, Route} from \"react-router-dom\"\nimport {default as MakeRoutine} from \"./components/routines/MakeRoutine\"\nimport {getToken, clearToken} from \"./auth\"\nimport{fetchUserData, fetchAllActivites} from \"./api\"\nimport {\n  Login,\n  Register,\n  MyRoutines,\n  Routines,\n  Activities,\n  Home\n} from \"./components\"\n\nconst App = () => {\n  const [authorized, setAuthorized] = useState(false);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(getToken());\n  const [activities, setActivities] = useState(null);\n  \n\n  useEffect(async () => {\n    if (loggedIn) {\n        try {\n            const data = await fetchUserData();\n            setCurrentUser(data.username);\n            const grabbedActivities = await fetchAllActivites();\n            setActivities(grabbedActivities);\n\n        } catch (error) {\n            console.error(error);\n        }\n    }\n  }, [loggedIn])\n\n  return (\n    <Router>\n      <nav className=\"navBar\">\n        <h1>Fitness Tracker</h1>\n        <div>\n          <Link className=\"Link\" to= '/'>Home</Link>\n          <Link className=\"Link\" to= '/routines'>Routines</Link>\n          <Link className=\"Link\" to= '/myRoutines'>My Routines</Link>\n          <Link className=\"Link\" to= '/activities'>Activites</Link>\n          { !loggedIn ? (<Link className=\"Link\" to= '/Login'>Login</Link>) : null}\n          { !loggedIn ? (<Link className=\"Link\" to= '/Register'>Sign Up</Link>) : null}\n          {loggedIn ? <Link className=\"Link\" onClick={() => {\n                        clearToken();\n                        setLoggedIn(null);\n                        setAuthorized(null)\n                        setCurrentUser(null)\n                    }}\n                        to='/'>Log Out</Link> : null}\n        </div>\n      </nav>\n      <main>\n        <Switch>\n          <Route exact path= '/'>\n            <Home />\n          </Route>\n          <Route path='/Login'>\n              <Login\n                loggedIn={loggedIn}\n                setLoggedIn={setLoggedIn}\n                setCurrentUser={setCurrentUser}\n                setAuthorized={setAuthorized}\n                authorized={authorized}\n              />\n          </Route>\n          <Route path='/Register'>\n             <Register\n             setAuthorized={setAuthorized} \n             loggedIn={loggedIn}\n             setLoggedIn={setLoggedIn}\n             /> \n          </Route>\n          <Route path='/routines'>\n            <Routines />\n          </Route>\n          <Route path='/myRoutines'>\n             <MyRoutines \n             loggedIn={loggedIn}\n             currentUser={currentUser}\n             activities={activities}\n          setActivities={setActivities}\n              />\n          </Route>\n          <Route path='/activities'>\n          <Activities\n             loggedIn={loggedIn}\n             currentUser={currentUser}\n             activities={activities}\n             setActivities={setActivities}\n              />\n          </Route>\n          <Route path='/createRoutine'>\n            <MakeRoutine />\n          </Route> \n        </Switch>  \n      </main>\n    </Router>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom'\nimport './index.css'\nimport {default as App} from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}